skip_branch_with_pr: true

environment:
  GO_VERSION: 1.18
  GO_TAGS: --tags release
  python_version: 3.10
  GITHUB_TOKEN:
    secure: uX7wMPjOz72c6zs4QS2/m3vsOE5Fh7e68YqMNSf0mRmb6hP9Ij8haCefQjxBDlEb
  DOCKER_REGISTRY_USER:
    secure: NJVK0u9M6ZhmQKUeR6Gnxg==
  DOCKER_REGISTRY_PASS:
    secure: V9nRzVDlIGS0a+dhkC2/vw==

  matrix:
    # - job_name: Windows
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    # - job_name: Linux
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    # - job_name: macOS
    #   job_group: tests
    #   APPVEYOR_BUILD_WORKER_IMAGE: macOS

    - job_name: Build Server binaries
      job_group: build_server
      job_depends_on: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: Test Python 3.7
      job_group: python_tests
      job_depends_on: build_server
      python_version: 3.7
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: Test Python 3.8
      job_group: python_tests
      job_depends_on: build_server
      python_version: 3.8
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: Test Python 3.9
      job_group: python_tests
      job_depends_on: build_server
      python_version: 3.9
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: Test Python 3.10
      job_group: python_tests
      job_depends_on: build_server
      python_version: 3.10
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

    - job_name: Build Python wheels
      job_group: python_build
      job_depends_on: python_tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      TWINE_USERNAME: __token__
      TWINE_NON_INTERACTIVE: true
      pypi_key:
        secure: 174ncAbF5IjSIkmioPt62jeSnzmTlRNchUkE4QdjDWH8xK1olYtySXLJpo2q95HcP7lWJky1hv4APESiRRHnBWoY0XRFafzM/mbCDMzG1tZXiXZmpP1qzHAtRP2QSCIg18xh1TMktraUdTi7sbJnjjRhqzgbW1k0kLBxKw79MPFBhYQ/TiGcmaYWZbWVZNY3HCUCb6Dt7bG1OE2Ul9rD1gvs55xwO9Oq9FOVA1VnMYw=
      test_pypi_key:
        secure: cMCzqE9PcLcAiQ7POU0eVmLsXpy/n3WA9USIQNDKKbvUeajtURVITKpQ4MmwUXZAGv8giPPDUppiIf22AwIfx3O43tBVCp/HjvKNCbgY8sTaQBx60mLRbVBfD1F/+VfeuSTm57qtuSxUkZWF1JlWp8UQqIwCMHHDd0/wqDfmPNKj6U617Lp3vIfhsfgaDofspCKSGfG8+Z+6gcpmI+mA1wFHQB+l/BAbsGbgih8HiH6EzcuyIphxQKEA6r2XDPWE

matrix:
  fast_finish: true

stack: python $python_version

for:
  # ======================================
  #      Windows
  # ======================================

  - matrix:
      only:
        - job_name: Windows

    install:
      - ps: .\install_go.ps1
      - set GOPATH=%USERPROFILE%\go
      - set PATH=%GOPATH%\bin;%PATH%
      - echo %GOPATH%
      - echo %GOROOT%
      - go version

    build_script:
      - ps: Install-Product node 12 x64
      - cd client
      - yarn
      - yarn build
      - cd ..
      - mkdir internal\server\content
      - xcopy client\build internal\server\content\ /E /Y
      - .\build.cmd
      - dir %USERPROFILE%\Go\bin

    test_script:
      - run-tests.cmd

  # ======================================
  #      Linux
  # ======================================

  - matrix:
      only:
        - job_name: Linux

    install:
      - gvm install go${GO_VERSION} -B
      - gvm use go${GO_VERSION}
      - go version

    build_script:
      - nvm use 12
      - cd client
      - yarn
      - yarn build
      - cd ..
      - mkdir server/content
      - cp -r client/build/* server/content
      - ./build.sh
      - ls $GOPATH/bin

    test_script:
      - ./run-tests.sh

  # ======================================
  #      macOS
  # ======================================

  - matrix:
      only:
        - job_name: macOS

    install:
      - gvm install go${GO_VERSION} -B
      - gvm use go${GO_VERSION}
      - go version
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install yarn

    build_script:
      - nvm use 14
      - cd client
      - yarn
      - yarn build
      - cd ..
      - mkdir server/content
      - cp -r client/build/* server/content
      - ./build.sh
      - ls $GOPATH/bin

    test_script:
      - ./run-tests.sh

  # ======================================
  #      Build Server binaries
  # ======================================

  - matrix:
      only:
        - job_group: build_server

    install:
      # Flutter SDK
      - sudo snap install flutter --classic
      - flutter sdk-path
      - flutter --version

      # Go and GoReleaser
      - gvm install go${GO_VERSION} -B
      - gvm use go${GO_VERSION}
      - go version
      - bash ./ci/install_goreleaser.sh
      - goreleaser --version

    build_script:
      # Flutter Web client
      - cd client
      - flutter build web --release --web-renderer auto
      - rm -rf build/web/canvaskit
      - ls -alR build/web

      # Flet Server in Go
      - cd ..
      - mkdir server/server/content
      - cp -r client/build/web/* server/server/content
      - cd server
      - sh: |
          if [[ "$APPVEYOR_REPO_TAG" == "true" ]]; then
            goreleaser
          else
            goreleaser --snapshot --skip-publish
          fi
      - cd ..

    test_script:
      - docker images
      - docker run --name flet-test -d flet/server
      - sleep 10
      - docker logs flet-test

      # publish to docker.io on tagged builds only
      - sh: |
          if [[ "$APPVEYOR_REPO_TAG" == "true" ]]; then
            echo "$DOCKER_REGISTRY_PASS" | docker login --username $DOCKER_REGISTRY_USER --password-stdin
            docker image push --all-tags flet/server
          fi

    artifacts:
      - path: server/dist/flet-*
      - path: server/dist/flet_*/*

  ######################
  #    Python Tests    #
  ######################
  - matrix:
      only:
        - job_group: python_tests

    install:
      - python --version
      - cd sdk/python
      - pip install pdm
      - pdm install

    build: off

    test_script:
      - pdm run pytest tests

  ######################
  #    Python Build    #
  ######################
  - matrix:
      only:
        - job_group: python_build

    install:
      - python --version
      - cd sdk/python
      - pip install --upgrade setuptools wheel twine pdm
      - pdm install

    test: off

    build_script:
      - ps: |
          $ErrorActionPreference = "Stop"

          if ($env:APPVEYOR_REPO_TAG -eq 'true') {
            # release mode

            # version
            $ver = $env:APPVEYOR_REPO_TAG_NAME
            if ($ver.StartsWith('v')) { $ver = $ver.Substring(1) }

            # prerelease moniker
            $idx = $ver.indexOf('-')
            if ($idx -ne -1) {
              $prerelease = $ver.Substring($idx + 1)
              $ver = $ver.Substring(0, $idx)
            }
            $env:TWINE_PASSWORD = $env:pypi_key
          } else {

            # build mode
            $ver = $env:APPVEYOR_BUILD_VERSION
            $env:TWINE_PASSWORD = $env:test_pypi_key
            $env:TWINE_REPOSITORY = 'testpypi'
          }

          # patch version
          $env:PACKAGE_VERSION = $ver
          (Get-Content pyproject.toml).replace("version = `"0.1.0`"", "version = `"$ver`"") | Set-Content pyproject.toml

      # build package
      - pdm build
      - python3 build-wheels.py

      # publish package
      - sh: |
          if [[ "$APPVEYOR_PULL_REQUEST_NUMBER" == "" ]]; then
              twine upload dist/*
          fi

    artifacts:
      path: sdk/python/dist/*
